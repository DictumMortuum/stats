{"version":3,"sources":["scythe/img.jpg","kemet/img.jpg","duel/img.jpg","standings/img.jpg","Game.js","Links.js","Bar.js","Template.js","scythe/components/averageWinningPoints.js","scythe/components/winsByBoard.js","scythe/components/winsByCombination.js","scythe/components/winsByCombination2.js","scythe/components/winsByCountry.js","scythe/components/winsByObjectives.js","scythe/components/winsByRounds.js","scythe/components/winsByPlayer.js","scythe/components/winsByStars.js","scythe/components/winsByRank.js","Pie.js","scythe/components/countryFrequency.js","scythe/components/boardFrequency.js","scythe/components/sweetspot.js","scythe/components/resolution.js","scythe/components/passive.js","scythe/components/aggressive.js","scythe/components/generator.js","scythe/analysis.js","scythe/Charts.js","reducers/kemet/score.js","common.js","reducers/kemet/init.js","kemet/components/config.js","reducers/kemet.js","kemet/components/standings.js","kemet/components/util.js","kemet/components/tilesByPicks.js","kemet/components/tilesByVP.js","kemet/components/tilesByPosition.js","kemet/components/bestTiles.js","kemet/components/playerVPByColor.js","kemet/components/playerPicksByColor.js","kemet/components/bestPlayer.js","kemet/index.js","duel/components/standings.js","duel/components/stats.js","duel/components/average.js","duel/index.js","standings/standings.js","standings/common.js","standings/timeline.js","standings/index.js","reducers/duel/score.js","reducers/duel/init.js","reducers/standings.js","reducers/config.js","index.js","reducers/duel.js"],"names":["module","exports","__webpack_require__","p","PersistentDrawerLeft","_this$props","this","props","classes","theme","basename","links","content","dispatch","_this$props$config","config","open","RightNav","element","react_default","a","createElement","react_router_dom","className","root","CssBaseline","AppBar","position","classNames","appBar","Object","defineProperty","appBarShift","Toolbar","disableGutters","IconButton","color","aria-label","onClick","type","menuButton","hide","Menu_default","Typography","variant","noWrap","title","search","Drawer","drawer","anchor","paper","drawerPaper","drawerHeader","direction","ChevronLeft_default","ChevronRight_default","Divider","contentShift","React","Component","connect","state","objectSpread","configReducer","withStyles","display","transition","transitions","create","easing","sharp","duration","leavingScreen","width","concat","marginLeft","easeOut","enteringScreen","marginRight","flexShrink","flexGrow","breakpoints","up","borderRadius","shape","spacing","alignItems","padding","mixins","toolbar","justifyContent","withTheme","Links","_this","handleClick","setState","charts","List","component","subheader","ListItem","button","ListItemText","secondary","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","map","_ref","path","text","key","to","style","textDecoration","primary","dflt","stackBars","low","listener","data","attr","s","series","length","seriesIndex","animate","stroke-width","begin","dur","from","fill","Bar","_props$data","total","sample","rest","objectWithoutProperties","desc","_props$className","className2","_props$options","options","_props$draw","draw","paragraph","dist_default","Template","Filter","Reduce","Init","_ref$labels","labels","temp","filter","reduce","graph","players","stats","incrementalAverage","common","acc","_ref3","winner","points","indexOf","ia","add","_ref2","undefined","averageWinningPoints","boards","board","b","winsByBoard","base","combinations","d","country","c","countries","winsByCountry","objectives","forEach","o","winsByObjectives","rounds","_rounds","r","winsByRounds","winsByPlayer","Array","_","i","winsByStars","rs","tier","console","log","winsByRank","Pie","relativeFrequency","x","countryFrequency","boardFrequency","percentile","max_points","parseInt","slice","percentileRounds","toConsumableArray","reverse","percentilePoints","percentileObjectives","round_stats","point_stats","objective_stats","high","sweetspot","resolutions","resolution","passives","passive","j","aggressives","aggressive","container","_ref$winscutoff","winscutoff","_ref$filters","filters","_ref$playernumber","playernumber","info","arr","push","Math","random","sort","hashmap","hash","Combinatorics","bigCombination","col","slicedToArray","retval","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","Generator","game","games","handleFilters","event","target","value","handlePlayers","handleCutoff","handleSubmit","handleNext","_this$state","Card","CardContent","card","FormControl","formControl","InputLabel","htmlFor","Select","onChange","MenuItem","multiple","input","Input","id","renderValue","selected","chips","Chip","label","chip","name","CardActions","Button","result","Paper","Table","TableHead","TableRow","TableCell","TableBody","flexWrap","margin","unit","minWidth","maxWidth","noLabel","marginTop","minHeight","unique","Set","collection","f","apply","l","discrete","distinct","cols","y","analysis","absoluteFrequency","modifier","wins","frequencies","windgambit","generator","countryCombination","Country","boardCombination","Board","ScytheLinks","src_Links","ScytheContent","react_router","exact","transform","player","vp","battle","flatten","addScoreToData","setup","_ref4","order","player1","total1","battle1","player2","total2","battle2","score","_hash$player","init","games2","_tiles","tiles","t","tile","json","tilesToArray","colors","perPlayer","mapDispatchToProps","handleConfig","Element","handleChange","checked","FormGroup","row","FormControlLabel","control","Switch","kemetReducer","args","first","cmp","arguments","merged","labels_sorted","first_sorted","colored_tiles","I","v","getAverage","compare","_ref3$series","second","second_sorted","bestTiles","gutterBottom","tilesByVP","tilesByPosition","tilesByPicks","standings","bestPlayer","playerVPByColor","playerPicksByColor","KemetLinks","components_config","KemetContent","p1","p2","duelReducer","blue","green","yellow","purple","wonder","marker","coin","_ref3$pantheon","pantheon","_ref3$temple","temple","won","components_standings","components_stats","average","DuelLinks","DuelContent","boardgame","dataKey","range","ratings","plays","play","Rating","groupCollapsed","game_participants","stat","rated","rate","new_rating","toString","groupEnd","results","mu","parseFloat","toFixed","sigma","matches","error","trueskill","table","dataToMarks","obj","Date","date","getFullYear","cur","keys","DateSlider","Slider","defaultValue","valueLabelDisplay","step","marks","min","max","onChangeCommitted","limit","_graph","assign","SampleSize","_graph2","sorted","ResponsiveContainer","height","window","innerHeight","BarChart","layout","top","right","left","bottom","XAxis","domain","dataMin","floor","dataMax","ceil","orientation","YAxis","stroke","CartesianGrid","strokeDasharray","Tooltip","ReferenceLine","cartesian_Bar","LabelList","ErrorBar","strokeWidth","standings_DateSlider","standingsReducer","dateSort","diff","useStyles","makeStyles","secondaryTail","backgroundColor","palette","main","generateTimelineItem","TimelineItem","TimelineOppositeContent","toLocaleDateString","weekday","year","month","day","TimelineSeparator","TimelineDot","esm","Provider","size","fa_index_esm","index_esm","wi_index_esm","getBoardgameIcon","TimelineConnector","TimelineContent","elevation","avatar","Avatar","Timeline","align","standings_standings","href","timeline","StandingsLinks","StandingsContent","tally","_ref$temple","_ref$pantheon","duel_init","_ref2$player","bv1","battle_victory","sv1","science_victory","rest1","_ref2$player2","bv2","sv2","rest2","score1","score2","getPlayers","flat","player_id","store","createStore","combineReducers","action","initialState","positions","ReactDOM","render","es","Grid","justify","item","xs","src","ScytheImg","alt","KemetImg","DuelImg","StandingsImg","Game","Charts_ScytheLinks","Charts_ScytheContent","kemet_KemetLinks","kemet_KemetContent","duel_DuelLinks","duel_DuelContent","standings_StandingsLinks","standings_StandingsContent","document","getElementById"],"mappings":"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","file":"static/js/main.09028bc2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img.5f8946f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img.4f228389.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img.b1a21f15.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img.b1a21f15.jpg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport classNames from 'classnames';\nimport Divider from '@material-ui/core/Divider';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { connect } from 'react-redux';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    marginLeft: 20,\n    marginRight: 12,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n});\n\nclass PersistentDrawerLeft extends React.Component {\n  render() {\n    const { classes, theme, basename, links, content, dispatch, config: { open, element: RightNav } } = this.props;\n\n    return (\n      <Router basename={basename}>\n        <div className={classes.root}>\n          <CssBaseline />\n          <AppBar\n            position=\"fixed\"\n            className={classNames(classes.appBar, {\n              [classes.appBarShift]: open,\n            })}\n          >\n            <Toolbar disableGutters={!open}>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"Open drawer\"\n                onClick={() => dispatch({ type: 'TOGGLE_DRAWER' })}\n                className={classNames(classes.menuButton, open && classes.hide)}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                {basename}\n              </Typography>\n              <RightNav className={classes.search} />\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            className={classes.drawer}\n            variant=\"persistent\"\n            anchor=\"left\"\n            open={open}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n          >\n            <div className={classes.drawerHeader}>\n              <IconButton onClick={() => dispatch({ type: 'TOGGLE_DRAWER' })}>\n                {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n              </IconButton>\n            </div>\n            <Divider />\n            {links}\n          </Drawer>\n          <main\n            className={classNames(classes.content, {\n              [classes.contentShift]: open,\n            })}\n          >\n            <div className={classes.drawerHeader} />\n            {content}\n          </main>\n        </div>\n      </Router>\n    );\n  }\n}\n\nPersistentDrawerLeft.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  config: {...state.configReducer},\n})\n\nexport default connect(mapStateToProps)(withStyles(styles, { withTheme: true })(PersistentDrawerLeft))\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { Link } from \"react-router-dom\";\n\nclass Links extends React.Component {\n  state = {\n    open: this.props.open || false\n  };\n\n  handleClick = () => {\n    this.setState(state => ({ open: !state.open }));\n  };\n\n  render() {\n    const {title, charts} = this.props;\n\n    return (\n      <List\n        component=\"nav\"\n        subheader={\n          <ListItem onClick={this.handleClick} button>\n            <ListItemText secondary={<b>{title}</b>} />\n            {this.state.open ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n        }\n      >\n      <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\n        {charts.map(({path, text}) => (\n          <Link key={path} to={path} style={{ textDecoration: 'none' }}>\n            <ListItem button>\n              <ListItemText primary={text} />\n            </ListItem>\n          </Link>\n        ))}\n      </Collapse>\n      </List>\n    );\n  };\n};\n\nexport default Links;\n","import React from 'react';\nimport Chartist from 'react-chartist';\nimport Typography from '@material-ui/core/Typography';\n\nconst dflt = {\n  stackBars: true,\n  // axisY: {\n  //   labelInterpolationFnc: function (value) {\n  //     return Number.isInteger(value) ? value : null;\n  //   }\n  // },\n  low: 0\n};\n\nconst listener = (data) => {\n  if (data.type === 'bar') {\n    data.element.attr({\n      style: 'stroke-width: 0px'\n    });\n\n    for (let s = 0; s < data.series.length; ++s) {\n      if (data.seriesIndex === s) {\n        data.element.animate({\n          'stroke-width': {\n            //begin: s * 500,\n            begin: 0,\n            dur: 0.5,\n            from: 0,\n            to: 40,\n            fill: 'freeze'\n          }\n        }, false);\n      }\n    }\n  }\n}\n\nexport default props => {\n  const {data: {total, sample, ...rest}, desc, className, className2 = \"\",  options = {}, draw = listener, open} = props;\n\n  return (\n    <div>\n      <Typography paragraph>\n        <b>Sample size: {sample} / {total}</b>\n      </Typography>\n      {desc ? desc : <div />}\n      <Chartist\n        data={rest}\n        options={{...dflt, ...options}}\n        type={'Bar'}\n        className={open ? className2 : className}\n        listener={{'draw': draw}}\n      />\n    </div>\n  );\n};\n","export default ({Filter, Reduce, Init, labels = [], data}) => {\n  let temp = data.filter(Filter);\n\n  return {\n    labels,\n    'series': temp.reduce(Reduce, Init),\n    'total': data.length,\n    'sample': temp.length\n  }\n};\n","import React from 'react';\nimport incrementalAverage from 'incremental-average';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players}) => {\n  const stats = players.map(() => incrementalAverage());\n\n  const Filter = ({winner, points}) => winner !== undefined && points !== undefined;\n  \n  const Reduce = (acc, {winner, points}) => {\n    let p = players.indexOf(winner);\n    let ia = stats[p];\n    acc[p][p] = ia.add(points);\n    return acc;\n  }\n\n  const Init = players.map(() => players.map(() => 0));\n\n  return common({\n    'labels': players,\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","\nimport React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players, boards}) => {\n  const Filter = ({winner, board}) => winner !== undefined && board !== undefined;\n\n  const Reduce = (acc, {board, winner}) => {\n    let b = boards.indexOf(board);\n    let p = players.indexOf(winner);\n    acc[p][b]++;\n    return acc;\n  };\n  \n  const Init = players.map(() => boards.map(() => 0));\n\n  return common({\n    'labels': boards,\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = base => ({data, players, boards}) => {\n  const combinations = boards.map(d => base + ' ' + d);\n\n  const Filter = ({winner, country, board}) => winner !== undefined && country === base && board !== undefined;\n\n  const Reduce = (acc, {country, winner, board}) => {\n    let p = players.indexOf(winner);\n    let c = combinations.indexOf(country + ' ' + board);\n\n    acc[p][c]++;\n    return acc;\n  };\n\n  const Init = players.map(() => combinations.map(() => 0));\n\n  return common({\n    'labels': combinations,\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default base => props => (<Chartist data={graph(base)(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = base => ({data, players, countries}) => {\n  const combinations = countries.map(d => d + ' ' + base);\n\n  const Filter = ({winner, country, board}) => winner !== undefined && country !== undefined && board === base;\n\n  const Reduce = (acc, {country, winner, board}) => {\n    let p = players.indexOf(winner);\n    let c = combinations.indexOf(country + ' ' + board);\n\n    acc[p][c]++;\n    return acc;\n  };\n\n  const Init = players.map(() => combinations.map(() => 0));\n\n  return common({\n    'labels': combinations,\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default base => props => (<Chartist data={graph(base)(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players, countries}) => {\n  const Filter = ({winner, country}) => winner !== undefined && country !== undefined;\n\n  const Reduce = (acc, {country, winner}) => {\n    let c = countries.indexOf(country);\n    let p = players.indexOf(winner);\n    acc[p][c]++;\n    return acc;\n  };\n  \n  const Init = players.map(() => countries.map(() => 0));\n\n  return common({\n    'labels': countries,\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players, objectives}) => {\n  const Filter = ({winner, objectives}) => winner !== undefined && objectives !== undefined;\n\n  const Reduce = (acc, {winner, objectives: _objectives}) => {\n    _objectives.forEach(d => {\n      let o = objectives.indexOf(d);\n      let p = players.indexOf(winner);\n      acc[p][o]++;\n    });\n  \n    return acc;\n  };\n  \n  const Init = players.map(() => objectives.map(() => 0));\n\n  return common({\n    'labels': objectives,\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players, rounds}) => {\n  const Filter = ({winner, rounds}) => winner !== undefined && rounds !== undefined;\n\n  const Reduce = (acc, {rounds: _rounds, winner}) => {\n    let r = rounds.indexOf(_rounds);\n    let p = players.indexOf(winner);\n    acc[p][r]++;\n    return acc;\n  }\n  \n  const Init = players.map(() => rounds.map(() => 0));\n\n  return common({\n    'labels': rounds,\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players}) => {\n  const Filter = ({winner}) => winner !== undefined;\n\n  const Reduce = (acc, {winner}) => {\n    let p = players.indexOf(winner);\n    acc[p][p]++;\n    return acc;\n  }\n  \n  const Init = players.map(() => players.map(() => 0));\n\n  return common({\n    'labels': players,\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players}) => {\n  const Filter = ({winner, objectives}) => winner !== undefined && objectives !== undefined;\n\n  const Reduce = (acc, {winner, objectives}) => {\n    let o = objectives.length - 1;\n    let p = players.indexOf(winner);\n    acc[p][o]++;\n    return acc;\n  };\n  \n  const Init = players.map(() => Array(6).fill(0));\n\n  return common({\n    'labels': Array(6).fill(0).map((_, i) => i + 1),\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\nimport tier from '../tiers.json';\nimport incrementalAverage from 'incremental-average';\n\nconst graph = ({data, players}) => {\n  const stats = players.map(() => incrementalAverage());\n\n  const Filter = ({winner, country, board}) => winner !== undefined && country !== undefined && board !== undefined;\n\n  const Reduce = (acc, {winner, country, board}) => {\n    let p = players.indexOf(winner);\n    let rs = tier.filter(d => d.country === country && d.board === board)\n    let ia = stats[p];\n\n    if (rs.length > 0) {\n      acc[p][p] = ia.add(rs[0].tier)\n    } else {\n      console.log(rs, country, board)\n    }\n\n    return acc;\n  }\n\n  const Init = players.map(() => players.map(() => 0));\n\n  return common({\n    'labels': players,\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from 'react-chartist';\n\nexport default ({data, className}) => (\n  <Chartist data={data} type={'Pie'} className={className} />\n);\n","import React from 'react';\nimport Chartist from '../../Pie';\n\nconst graph = ({data, countries, relativeFrequency}) => ({\n  'series': relativeFrequency(countries)(data.map(x => x.country)),\n  'labels': countries\n});\n\nexport default props => (<Chartist data={graph(props)} className={'ct-octave countries'} />);\n","import React from 'react';\nimport Chartist from '../../Pie';\n\nconst graph = ({data, boards, relativeFrequency}) => ({\n  'series': relativeFrequency(boards)(data.map(x => x.board)),\n  'labels': boards\n});\n\nexport default props => (<Chartist data={graph(props)} className={'ct-octave'} />);\n","import React from 'react';\nimport incrementalAverage from 'incremental-average';\nimport Typography from '@material-ui/core/Typography';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players, rounds: r, points: p, percentile}) => {\n\n  const max_points = parseInt(p.slice(-1)) + 1;\n\n  const percentileRounds = [...Array(r[0]).fill(0), ...percentile(r).reverse()];\n  const percentilePoints = percentile(Array(max_points));\n  const percentileObjectives = [0, ...percentile(Array(6)).reverse()];\n\n  const round_stats = players.map(() => incrementalAverage());\n  const point_stats = players.map(() => incrementalAverage());\n  const objective_stats = players.map(() => incrementalAverage());\n\n  const Filter = ({\n    winner,\n    points,\n    rounds,\n    objectives\n  }) => winner !== undefined && (points !== undefined || rounds !== undefined || objectives !== undefined);\n\n  const Reduce = (acc, {winner, points, rounds, objectives}) => {\n    let p = players.indexOf(winner);\n\n    if (rounds !== undefined) {\n      acc[0][p] = round_stats[p].add(percentileRounds[rounds]);\n    }\n\n    if (points !== undefined) {\n      acc[1][p] = point_stats[p].add(percentilePoints[points]);\n    }\n\n    if (objectives !== undefined) {\n      acc[2][p] = objective_stats[p].add(percentileObjectives[objectives.length]);\n    }\n\n    return acc;\n  };\n\n  return common({\n    'labels': players,\n    Reduce,\n    Filter,\n    Init: players.map(() => players.map(() => 0)),\n    data\n  });\n};\n\nconst options = {\n  stackBars: false,\n  high: 100\n};\n\nexport default props => (\n  <div>\n    <Chartist\n      data={graph(props)}\n      options={options}\n      draw={() => 1}\n      className={\"ct-octave players\"} \n    />\n    <Typography paragraph>\n      <b>1st bar: round sweetspot.</b> The higher the score, the earlier does this player end the game.\n    </Typography>\n    <Typography paragraph>\n      <b>2nd bar: points sweetspot.</b> The higher the score, the more the player scores on average.\n    </Typography>\n    <Typography paragraph>\n      <b>3rd bar: objectives sweetspot.</b> The higher the score, the more time this player wins with less than 6 objectives.\n    </Typography>\n  </div>\n);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players, resolutions}) => {\n\n  const Reduce = (acc, {winner, resolution}) => {\n    let r = resolutions.indexOf(resolution);\n    let p = players.indexOf(winner);\n    acc[p][r]++;\n    return acc;\n  };\n\n  return common({\n    'labels': resolutions,\n    Reduce,\n    Filter: ({winner, resolution}) => winner !== undefined && resolution !== undefined,\n    Init: players.map(() => resolutions.map(() => 0)),\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players, passives}) => {\n\n  const Reduce = (acc, {winner, passive}) => {\n    let j = passives.indexOf(passive);\n    let i = players.indexOf(winner);\n    acc[i][j]++;\n    return acc;\n  };\n\n  return common({\n    'labels': passives,\n    Reduce,\n    Filter: ({winner, passive}) => winner !== undefined && passive !== undefined,\n    Init: players.map(() => passives.map(() => 0)),\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players, aggressives}) => {\n\n  const Reduce = (acc, {winner, aggressive}) => {\n    let j = aggressives.indexOf(aggressive);\n    let i = players.indexOf(winner);\n    acc[i][j]++;\n    return acc;\n  };\n\n  return common({\n    'labels': aggressives,\n    Reduce,\n    Filter: ({winner, aggressive}) => winner !== undefined && aggressive !== undefined,\n    Init: players.map(() => aggressives.map(() => 0)),\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Chip from '@material-ui/core/Chip';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport Paper from '@material-ui/core/Paper';\nimport TableRow from '@material-ui/core/TableRow';\nimport Combinatorics from 'js-combinatorics';\n\nconst shuffle = arr => arr.map(a => [Math.random(), a]).sort((a, b) => a[0] - b[0]).map(a => a[1]);\n\nconst container = ({boards, countries, data, winscutoff = 1, filters = [], playernumber = 4}) => {\n\n  const info = data.filter(d => d.board !== undefined && d.country !== undefined);\n\n  const combinations = (() => {\n    let temp = [];\n\n    countries.forEach(country => {\n      boards.forEach(board => {\n        let n = info.filter(d => board === d.board && country === d.country).length;\n\n        if (n <= winscutoff) {\n          temp.push([board, country]);\n        }\n      });\n    });\n\n    return shuffle(temp).slice(0, 30);\n  })();\n\n  const hashmap = (() => {\n    let hash = {};\n\n    [...boards, ...countries].forEach(c => {\n      hash[c] = 0;\n    });\n\n    return hash;\n  })();\n\n  const impossible = col => {\n    let hash = {...hashmap};\n\n    col.forEach(([board, country]) => {\n      hash[board]++;\n      hash[country]++;\n    });\n\n    for (let key in hash) {\n      if (hash[key] > 1) {\n        return 0;\n      }\n    }\n\n    let retval = 1;\n\n    filters.forEach(key => {\n      if (hash[key] === 0) {\n        retval = 0;\n      }\n    });\n\n    return retval;\n  };\n\n  return Combinatorics.bigCombination(combinations, playernumber).filter(impossible);\n};\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n    maxWidth: 300,\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: theme.spacing.unit / 4,\n  },\n  noLabel: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  result: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  card: {\n    minHeight: 100\n  }\n});\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass Generator extends React.Component {\n  state = {\n    filters: [],\n    total: \"\",\n    i: 0,\n    game: [],\n    games: {},\n    playernumber: 3,\n    winscutoff: 1\n  };\n\n  handleFilters = event => {\n    this.setState({ filters: event.target.value });\n  };\n\n  handlePlayers = event => {\n    this.setState({ playernumber: event.target.value });\n  };\n\n  handleCutoff = event => {\n    this.setState({ winscutoff: event.target.value });\n  };\n\n  handleSubmit = () => {\n    const games = container({...this.state, ...this.props});\n\n    console.log(games);\n\n    if (games.length !== 0) {\n      this.setState({\n        i: 0,\n        games,\n        total: \"Found \" + games.length + \" combinations.\",\n        game: games[0]\n      });\n    } else {\n      this.setState({\n        total: \"There are no combinations with this setup. Please try again.\"\n      });\n    }\n  };\n\n  handleNext = () => {\n    const {i, games} = this.state;\n\n    this.setState({\n      game: games[i],\n      i: i + 1,\n    });\n  }\n\n  render() {\n    const {classes, countries, boards} = this.props;\n\n    return (\n      <div>\n        <Card>\n          <CardContent className={classes.card}>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"players-simple\">Player #</InputLabel>\n              <Select value={this.state.playernumber} onChange={this.handlePlayers}>\n                {[2, 3, 4, 5, 6, 7].map(d => (<MenuItem key={d} value={d}>{d} players</MenuItem>))}\n              </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"winscutoff-simple\">Maximum wins</InputLabel>\n              <Select value={this.state.winscutoff} onChange={this.handleCutoff}>\n                {[0, 1, 2, 3, 4, 5, 6, 7].map(d => (<MenuItem key={d} value={d}>{d} wins</MenuItem>))}\n              </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"select-multiple-chip\">Must Include</InputLabel>\n              <Select\n                multiple\n                value={this.state.filters}\n                onChange={this.handleFilters}\n                input={<Input id=\"select-multiple-chip\" />}\n                renderValue={selected => (\n                  <div className={classes.chips}>\n                    {selected.map(value => (\n                      <Chip key={value} label={value} className={classes.chip} />\n                    ))}\n                  </div>\n                )}\n                MenuProps={MenuProps}\n              >\n                {[...countries, ...boards].map(name => (\n                  <MenuItem key={name} value={name}>\n                    {name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </CardContent>\n          <CardActions>\n            <Button variant=\"contained\" color=\"primary\" onClick={this.handleSubmit}>Generate</Button>\n            <Button variant=\"outlined\" onClick={this.handleNext}>Next</Button>\n            <Typography variant=\"h5\" component=\"h2\">\n              {this.state.total}\n            </Typography>\n          </CardActions>\n        </Card>\n        <div className={classes.result}>\n          <p>Using the generator: TL;DR - Select the number of players and press \"generate\".</p>\n          <h3>Maximum Wins</h3>\n          <p>The generator uses the [board, country] combinations that have zero recorded wins to generate a game.</p>\n          <p>However, those choices are not always enough to generate a game. Thus, if you can't generate a game, you can use this dropdown to also include combinations with more than 0 recorded wins.</p>\n          <h3>Must Include</h3>\n          <p>Use this dropdown to select boards and/or countries that you absolutely want in the results (e.g. if a player wants to play a specific country)</p>\n          <h3>Next</h3>\n          <p>The generator will inform you of how many combinations it has generated. If you don't like a particular combination, use the next button to see the next one.</p>\n        </div>\n        <Paper className={classes.result}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Board</TableCell>\n                <TableCell>Country</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {this.state.game.map(c => (\n                <TableRow key={c[0] + c[1]}>\n                  <TableCell>{c[0]}</TableCell>\n                  <TableCell>{c[1]}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Paper>\n      </div>\n    )\n  }\n}\n\nGenerator.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(Generator);\n","import data from './plays.json';\n\n/*\n * Returns the distinct elements of an array.\n */\nconst unique = col => [...new Set(col)];\n\n/*\n * Flattens an array.\n */\nconst flatten = col => [].concat.apply([], col);\n\n/*\n * Creates a flat array of the distinct elements identified by function f.\n * Useful for extracting collections of elements from the data.\n * If series length < 4, chartist has an issue with that.\n */\nconst collection = f => {\n  let temp = unique(flatten(data.filter(f).map(f)));\n  let l = temp.length;\n  \n  if (l < 4) {\n    return [...temp, ...Array(4 - l).fill(\"\")];\n  } else {\n    return temp;\n  }\n}\n\n/*\n * Returns an array from the least amount to the maximum.\n * e.g. discrete([13, 18]) => [13, 14, 15, 16, 17, 18]\n */\nconst discrete = data => {\n  let distinct = [...new Set(data)].sort();\n  let low = distinct[0];\n  let high = distinct.slice(-1);\n  return Array(high - low + 1).fill(low).map((d, i) => d + i);\n};\n\n/*\n * Returns an array containing the relative frequency of cols.\n */\nconst relativeFrequency = cols => data => cols.map(x => data.filter(y => x === y).length);\n\n/*\n * Returns an array containing the absolute frequency of cols.\n */\nconst absoluteFrequency = cols => data => relativeFrequency(cols)(data).map(x => x / data.length);\n\n/*\n * percentile([1,2,3,4]) = [ 25, 33.333333333333336, 50, 100 ]\n */\nconst percentile = col => {\n  let l = col.length;\n  let modifier = x => x / l * 100;\n  return Array(l).fill(1).map((x, i) => modifier(x + i));\n}\n\nexport default {\n  unique,\n  countries: collection(d => d.country).sort(),\n  players: collection(d => d.winner),\n  boards: collection(d => d.board),\n  objectives: collection(d => d.objectives).sort(),\n  data,\n  rounds: discrete(collection(d => d.rounds)),\n  points: discrete(collection(d => d.points)),\n  passives: collection(d => d.passive),\n  aggressives: collection(d => d.aggressive),\n  resolutions: collection(d => d.resolution),\n  relativeFrequency,\n  absoluteFrequency,\n  percentile\n};\n","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport Links from '../Links';\nimport { Route } from \"react-router-dom\";\nimport AverageWinningPoints from './components/averageWinningPoints';\nimport WinsByBoard from './components/winsByBoard';\nimport WinsByCombination from './components/winsByCombination';\nimport WinsByCombination2 from './components/winsByCombination2';\nimport WinsByCountry from './components/winsByCountry';\nimport WinsByObjectives from './components/winsByObjectives';\nimport WinsByRounds from './components/winsByRounds';\nimport WinsByPlayer from './components/winsByPlayer';\nimport WinsByStars from './components/winsByStars';\nimport WinsByRank from './components/winsByRank';\nimport CountryFrequency from './components/countryFrequency';\nimport BoardFrequency from './components/boardFrequency';\nimport Sweetspot from './components/sweetspot';\nimport Resolution from './components/resolution';\nimport Passive from './components/passive';\nimport Aggressive from './components/aggressive';\nimport Generator from './components/generator';\nimport common from './analysis';\nimport ScytheImg from './img.jpg';\n\nconst {countries, boards} = common;\n\nconst wins = [{\n  'text': 'Wins by player',\n  'path': '/',\n  'component': () => <WinsByPlayer {...common} />\n}, {\n  'text': 'Average winning points',\n  'path': '/average/',\n  'component': () => <AverageWinningPoints {...common} />\n}, {\n  'text': 'Player sweetspot',\n  'path': '/sweetspot/',\n  'component': () => <Sweetspot {...common} />\n}, {\n  'text': 'Wins by country',\n  'path': '/country/',\n  'component': () => <WinsByCountry {...common} />\n}, {\n  'text': 'Wins by objectives',\n  'path': '/objectives/',\n  'component': () => <WinsByObjectives {...common} />\n}, {\n  'text': 'Average tier for wins',\n  'path': '/tier/',\n  'component': () => <WinsByRank {...common} />\n}, {\n  'text': 'Wins by rounds',\n  'path': '/rounds/',\n  'component': () => <WinsByRounds {...common} />\n}, {\n  'text': 'Wins by board',\n  'path': '/board/',\n  'component': () => <WinsByBoard {...common} />\n}, {\n  'text': 'Wins by stars',\n  'path': '/stars/',\n  'component': () => <WinsByStars {...common} />\n}];\n\nconst frequencies = [{\n  'text': 'Country frequency',\n  'path': '/country/frequency/',\n  'component': () => <CountryFrequency {...common} />\n}, {\n  'text': 'Board frequency',\n  'path': '/board/frequency/',\n  'component': () => <BoardFrequency {...common} />\n}];\n\nconst windgambit = [{\n  'text': 'Resolution tiles',\n  'path': '/resolution/',\n  'component': () => <Resolution {...common} />\n}, {\n  'text': 'Aggressive tiles',\n  'path': '/windgambit/aggressive/',\n  'component': () => <Aggressive {...common} />\n}, {\n  'text': 'Passive tiles',\n  'path': '/windgambit/passive/',\n  'component': () => <Passive {...common} />\n}];\n\nconst generator = [{\n  'text': 'Generator',\n  'path': '/generator/',\n  'component': () => <Generator {...common} />\n}];\n\nconst countryCombination = countries.map(c => {\n  const Country = WinsByCombination(c);\n\n  return {\n    'text': 'Wins by ' + c,\n    'path': '/' + c + '/',\n    'component': () => <Country {...common} />\n  };\n});\n\nconst boardCombination = boards.map(c => {\n  const Board = WinsByCombination2(c);\n\n  return {\n    'text': 'Wins by ' + c,\n    'path': '/' + c + '/',\n    'component': () => <Board {...common} />\n  };\n});\n\nconst ScytheLinks = () => (\n  <div>\n    <Links charts={wins} title={\"General Stats\"} key={\"Wins\"} open={true} />\n    <Divider />\n    <Links charts={windgambit} title={\"Wind Gambit\"} key={\"Wind Gambit\"} />\n    <Divider />\n    <Links charts={frequencies} title={\"Frequencies\"} key={\"Frequencies\"} />\n    <Divider />\n    <Links charts={countryCombination} title={\"Country Combinations\"} key={\"Country combinations\"} />\n    <Divider />\n    <Links charts={boardCombination} title={\"Board Combinations\"} key={\"Board combinations\"} />\n    <Divider />\n    <Links charts={generator} title={\"Tools\"} key={\"Generator\"} />\n  </div>\n);\n\nconst ScytheContent = () => (\n  [...wins, ...frequencies, ...windgambit, ...countryCombination, ...boardCombination, ...generator].map(({path, component}) => (\n    <Route key={path} path={path} exact component={component} />\n  ))\n);\n\nexport {ScytheContent, ScytheLinks, ScytheImg};\n","const f = order => (\n  {player: player1, total: total1, battle: battle1},\n  {player: player2, total: total2, battle: battle2}\n) => {\n  if (total1 > total2) {\n    return -1;\n  } else if (total1 < total2) {\n    return 1;\n  } else {\n    if (battle1 > battle2) {\n      return -1;\n    } else if (battle1 < battle2) {\n      return 1;\n    } else {\n      let a = order.indexOf(player1);\n      let b = order.indexOf(player2);\n\n      if (a > b) {\n        return 1;\n      }\n\n      if (a < b) {\n        return -1;\n      }\n    }\n  }\n}\n\nconst transform = ({player, vp}) => {\n  let total = 0;\n  let battle = 0;\n\n  for (let type in vp) {\n    total += vp[type];\n\n    if (type === 'battle') {\n      battle += vp[type]\n    }\n  }\n\n  return {\n    player,\n    total,\n    battle\n  }\n}\n\nexport default ({order, setup}) => setup.map(transform).sort(f(order));\n","/*\n * Returns the distinct elements of an array.\n */\nconst unique = col => [...new Set(col)];\n\n/*\n * Flattens an array.\n */\nconst flatten = col => [].concat.apply([], col);\n\n/*\n * Creates a flat array of the distinct elements identified by function f.\n * Useful for extracting collections of elements from the data.\n * If series length < 4, chartist has an issue with that.\n */\nconst collection = data => f => {\n  let temp = unique(flatten(data.filter(f).map(f)));\n  let l = temp.length;\n  \n  if (l < 4) {\n    return [...temp, ...Array(4 - l).fill(\"\")];\n  } else {\n    return temp;\n  }\n};\n\n/*\n * Returns an array from the least amount to the maximum.\n * e.g. discrete([13, 18]) => [13, 14, 15, 16, 17, 18]\n */\nconst discrete = data => {\n  let distinct = [...new Set(data)].sort();\n  let low = distinct[0];\n  let high = distinct.slice(-1);\n  return Array(high - low + 1).fill(low).map((d, i) => d + i);\n};\n\nexport {\n  unique,\n  flatten,\n  collection,\n  discrete\n};\n","import data from '../../kemet/plays.json';\nimport score from './score';\nimport tiles from '../../kemet/tiles.json';\nimport {\n  unique,\n  flatten,\n  collection,\n  discrete\n} from '../../common';\n\nconst addScoreToData = game => {\n  const {setup} = game;\n  const hash = {};\n\n  score(game).forEach(({player, total}, i) => {\n    hash[player] = {};\n    hash[player].position = i;\n    hash[player].score = total;\n  });\n\n  const temp = setup.map(d => {\n    const {player} = d;\n    const {position, score} = hash[player];\n    d.position = position;\n    d.score = score;\n    return d;\n  });\n\n  return {...game, setup: temp};\n};\n\nconst transformGames = game => {\n  const {setup} = game;\n  const temp = [];\n\n  setup.forEach(({tiles: _tiles, ...rest}) => {\n    _tiles.forEach(t => {\n      temp.push({\n        ...rest,\n        ...tiles[t],\n        tile: t\n      });\n    });\n  });\n\n  return temp;\n};\n\nconst tilesToArray = json => {\n  const temp = [];\n\n  for (let i in tiles) {\n    const t = tiles[i];\n    t.name = i;\n    temp.push(t);\n  }\n\n  return temp;\n};\n\nexport default {\n  players: unique(flatten(['Dimitris', 'Panagiotis', 'Elena', 'Kostas', ...collection(data)(d => d.order)])),\n  games: data.map(addScoreToData),\n  games2: flatten(data.map(addScoreToData).map(transformGames)),\n  rounds: discrete([1, ...data.map(d => d.rounds)]),\n  tiles: tilesToArray(tiles),\n  colors: ['red', 'blue', 'white', 'black'],\n  config: {\n    perPlayer: false\n  }\n};\n","import React from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ListItem from '@material-ui/core/ListItem';\nimport Switch from '@material-ui/core/Switch';\nimport { connect } from 'react-redux';\nimport { config as kemetConfig } from '../../reducers/kemet';\n\nconst mapStateToProps = state => ({\n  ...state.kemetReducer\n});\n\nconst mapDispatchToProps = {\n  handleConfig: kemetConfig\n};\n\nclass Element extends React.Component {\n  handleChange = event => {\n    this.props.handleConfig({\n      perPlayer: event.target.checked\n    });\n  }\n\n  render() {\n    const {config} = this.props;\n\n    return (\n      <ListItem>\n        <FormGroup row>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={config.perPlayer}\n                onChange={this.handleChange}\n                value={config.perPlayer}\n                color=\"primary\"\n              />\n            }\n            label=\"Stats per player\"\n          />\n        </FormGroup>\n      </ListItem>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Element);\n","import initialState from './kemet/init';\n\nexport const KEMET_CONFIG = 'KEMET_CONFIG';\n\nexport const config = config => ({\n  type: KEMET_CONFIG,\n  config\n});\n\nexport const reducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"INIT\":\n      return initialState;\n    case KEMET_CONFIG:\n      return {...state, config: action.config};\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport { connect } from 'react-redux';\n\nconst graph = ({games, players}) => {\n  const Init = Array(5).fill(0).map(() => players.map(() => 0));\n\n  const Reduce = (acc, {setup}) => {\n    setup.forEach(({player, position}) => {\n      let p = players.indexOf(player);\n      acc[position][p]++;\n    });\n    return acc;\n  };\n\n  return {\n    'labels': players,\n    'series': games.reduce(Reduce, Init),\n    'total': games.length,\n    'sample': games.length\n  };\n};\n\nconst mapStateToProps = state => ({\n  ...state.kemetReducer,\n  options: {\n    stackBars: false\n  },\n  draw: () => 1,\n  className: \"ct-octave\"\n});\n\nclass Element extends React.Component {\n\n  render() {\n    const args = {...this.props, data: graph(this.props)}\n    return <Chartist {...args} />;\n  }\n}\n\nexport default connect(mapStateToProps)(Element);\n","\n\nconst sort = ({labels, sample, total, series: [first]}, cmp = (a, b) => b.score - a.score) => {\n  let merged = [];\n  const labels_sorted = [];\n  const first_sorted = [];\n\n  for (let i = 0; i < labels.length; i++) {\n    merged.push({\n      'label': labels[i],\n      'score': first[i]\n    });\n  }\n\n  merged = merged.sort(cmp);\n\n  for (let i = 0; i < merged.length; i++) {\n    labels_sorted[i] = merged[i].label;\n    first_sorted[i] = merged[i].score;\n  }\n\n  return {\n    labels: labels_sorted,\n    sample,\n    total,\n    series: [\n      first_sorted\n    ]\n  };\n};\n\nexport {\n  sort\n};","import React from 'react';\nimport Chartist from '../../Bar';\nimport { connect } from 'react-redux';\nimport { sort } from './util';\n\nconst graph = ({games, players, tiles, color, config: {perPlayer}}) => {\n\n  const colored_tiles = tiles.filter(d => d.color === color).map(d => d.name);\n\n  const I = players.map(() => colored_tiles.map(() => 0));\n\n  const R = (acc, {setup}) => {\n    setup.forEach(({tiles: _tiles, player}) => {\n      _tiles.forEach(t => {\n        let p = perPlayer ? players.indexOf(player) : 0;\n        let i = colored_tiles.indexOf(t);\n\n        if(i > -1) {\n          acc[p][i]++;\n        }\n      });\n    });\n\n    return acc;\n  };\n\n  return {\n    'labels': colored_tiles,\n    'series': games.reduce(R, I),\n    'total': games.length,\n    'sample': games.length\n  };\n};\n\nconst mapStateToProps = state => ({\n  ...state.kemetReducer,\n  options: {\n    stackBars: false\n  },\n  draw: () => 1,\n  className: \"ct-octave players\"\n});\n\nclass Element extends React.Component {\n\n  render() {\n    const {config: {perPlayer}} = this.props;\n    const data = !perPlayer ? sort(graph(this.props)) : graph(this.props);\n    const args = {...this.props, data};\n    return <Chartist {...args} />;\n  }\n}\n\nexport default connect(mapStateToProps)(Element);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport { connect } from 'react-redux';\nimport { sort } from './util';\nimport incrementalAverage from 'incremental-average';\n\nconst graph = ({games, players, tiles, color, config: {perPlayer}}) => {\n\n  const colored_tiles = tiles.filter(d => d.color === color).map(d => d.name);\n\n  const I = players.map(() => colored_tiles.map(() => incrementalAverage()));\n\n  const R = (acc, {setup}) => {\n    setup.forEach(({tiles: _tiles, score, player}) => {\n      _tiles.forEach(t => {\n        let p = perPlayer ? players.indexOf(player) : 0;\n        let i = colored_tiles.indexOf(t);\n\n        if(i > -1) {\n          acc[p][i].add(score);\n        }\n      });\n    });\n\n    return acc;\n  };\n\n  return {\n    'labels': colored_tiles,\n    'series': games.reduce(R, I).map(d => d.map(v => v.getAverage())),\n    'total': games.length,\n    'sample': games.length\n  };\n};\n\nconst mapStateToProps = state => ({\n  ...state.kemetReducer,\n  options: {\n    stackBars: false\n  },\n  draw: () => 1,\n  className: \"ct-octave players\"\n});\n\nclass Element extends React.Component {\n\n  render() {\n    const {config: {perPlayer}} = this.props;\n    const data = !perPlayer ? sort(graph(this.props)) : graph(this.props);\n    const args = {...this.props, data};\n    return <Chartist {...args} />;\n  }\n}\n\nexport default connect(mapStateToProps)(Element);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport { connect } from 'react-redux';\nimport { sort } from './util';\nimport incrementalAverage from 'incremental-average';\n\nconst graph = ({games, players, tiles, color, config: {perPlayer}}) => {\n\n  const colored_tiles = tiles.filter(d => d.color === color).map(d => d.name);\n\n  const I = players.map(() => colored_tiles.map(() => incrementalAverage()));\n\n  const R = (acc, {setup}) => {\n    setup.forEach(({tiles: _tiles, position, player}) => {\n      _tiles.forEach(t => {\n        let p = perPlayer ? players.indexOf(player) : 0;\n        let i = colored_tiles.indexOf(t);\n\n        if(i > -1) {\n          acc[p][i].add(position + 1);\n        }\n      });\n    });\n\n    return acc;\n  };\n\n  return {\n    'labels': colored_tiles,\n    'series': games.reduce(R, I).map(d => d.map(v => v.getAverage())),\n    'total': games.length,\n    'sample': games.length\n  };\n};\n\nconst mapStateToProps = state => ({\n  ...state.kemetReducer,\n  options: {\n    stackBars: false\n  },\n  draw: () => 1,\n  className: \"ct-octave players\"\n});\n\nclass Element extends React.Component {\n\n  render() {\n    const {config: {perPlayer}} = this.props;\n    const data = !perPlayer ? sort(graph(this.props)) : graph(this.props);\n    const args = {...this.props, data};\n    return <Chartist {...args} />;\n  }\n}\n\nexport default connect(mapStateToProps)(Element);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport { connect } from 'react-redux';\nimport incrementalAverage from 'incremental-average';\n\nconst n = 20;\n\nconst graph = ({games2: games, tiles}) => {\n\n  const data = tiles.map(d => d.name);\n\n  const I = [0, 0].map(() => tiles.map(() => incrementalAverage()));\n\n  const R = (acc, {score, position, tile}) => {\n    let i = data.indexOf(tile);\n    acc[0][i].add(score);\n    acc[1][i].add(position + 1);\n    return acc;\n  };\n\n  return {\n    'labels': data,\n    'series': games.reduce(R, I).map(d => d.map(v => v.getAverage())),\n    'total': games.length,\n    'sample': games.length\n  };\n};\n\nconst compare = (a, b) => {\n  if (a.position > b.position) {\n    return 1;\n  } else if (a.position < b.position) {\n    return -1;\n  } else {\n    return b.score - a.score;\n  }\n}\n\nconst sort = ({labels, sample, total, series: [first, second]}) => {\n  let merged = [];\n  const labels_sorted = [];\n  const first_sorted = [];\n  const second_sorted = [];\n\n  for (let i = 0; i < labels.length; i++) {\n    merged.push({\n      'label': labels[i],\n      'score': first[i],\n      'position': second[i]\n    });\n  }\n\n  merged = merged.sort(compare).filter(d => d.score !== 0 && d.position !== 0);\n\n  for (let i = 0; i < merged.length; i++) {\n    labels_sorted[i] = merged[i].label;\n    first_sorted[i] = merged[i].score;\n    second_sorted[i] = merged[i].position;\n  }\n\n  return {\n    labels: labels_sorted.slice(0, n),\n    sample,\n    total,\n    series: [\n      first_sorted.slice(0, n),\n      second_sorted.slice(0, n)\n    ]\n  };\n};\n\nconst mapStateToProps = state => ({\n  ...state.kemetReducer,\n  options: {\n    stackBars: false\n  },\n  draw: () => 1,\n  className: \"ct-octave players\"\n});\n\nclass Element extends React.Component {\n  render() {\n    const data = graph(this.props);\n    const args = {...this.props, data: sort(data)}\n    return <Chartist {...args} />;\n  }\n}\n\nexport default connect(mapStateToProps)(Element);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport tiles from '../tiles.json';\nimport { connect } from 'react-redux';\nimport incrementalAverage from 'incremental-average';\n\nconst graph = ({colors, games, players}) => {\n\n  const I = colors.map(() => players.map(() => incrementalAverage()));\n\n  const R = (acc, {setup}) => {\n    setup.forEach(({tiles: _tiles, score, player}) => {\n      _tiles.forEach(t => {\n        let p = players.indexOf(player);\n        let i = colors.indexOf(tiles[t].color);\n\n        if(i > -1) {\n          acc[i][p].add(score);\n        }\n      });\n    });\n\n    return acc;\n  };\n\n\n  return {\n    'labels': players,\n    'series': games.reduce(R, I).map(d => d.map(v => v.getAverage())),\n    'total': games.length,\n    'sample': games.length\n  };\n};\n\nconst mapStateToProps = state => ({\n  ...state.kemetReducer,\n  options: {\n    stackBars: false\n  },\n  draw: () => 1,\n  className: \"ct-octave pyramids\"\n});\n\nclass Element extends React.Component {\n\n  render() {\n    const args = {...this.props, data: graph(this.props)}\n    console.log(args.data.series);\n    return <Chartist {...args} />;\n  }\n}\n\nexport default connect(mapStateToProps)(Element);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport tiles from '../tiles.json';\nimport { connect } from 'react-redux';\n\nconst graph = ({colors, games, players}) => {\n\n  const I = colors.map(() => players.map(() => 0));\n\n  const R = (acc, {setup}) => {\n    setup.forEach(({tiles: _tiles, score, player}) => {\n      _tiles.forEach(t => {\n        let p = players.indexOf(player);\n        let i = colors.indexOf(tiles[t].color);\n\n        if(i > -1) {\n          acc[i][p]++;\n        }\n      });\n    });\n\n    return acc;\n  };\n\n\n  return {\n    'labels': players,\n    'series': games.reduce(R, I),\n    'total': games.length,\n    'sample': games.length\n  };\n};\n\nconst mapStateToProps = state => ({\n  ...state.kemetReducer,\n  options: {\n    stackBars: false\n  },\n  draw: () => 1,\n  className: \"ct-octave pyramids\"\n});\n\nclass Element extends React.Component {\n\n  render() {\n    const args = {...this.props, data: graph(this.props)}\n    console.log(args.data.series);\n    return <Chartist {...args} />;\n  }\n}\n\nexport default connect(mapStateToProps)(Element);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport { connect } from 'react-redux';\nimport { sort } from './util';\nimport incrementalAverage from 'incremental-average';\n\nconst graph = ({games, players}) => {\n\n  const I = players.map(() => incrementalAverage());\n\n  const R = (acc, {setup}) => {\n    setup.forEach(({player, position}) => {\n      let p = players.indexOf(player);\n      acc[p].add(position + 1);\n    });\n\n    return acc;\n  };\n\n  return {\n    'labels': players,\n    'series': [games.reduce(R, I).map(v => v.getAverage())],\n    'total': games.length,\n    'sample': games.length\n  };\n};\n\nconst mapStateToProps = state => ({\n  ...state.kemetReducer,\n  options: {\n    stackBars: false\n  },\n  draw: () => 1,\n  className: \"ct-octave\"\n});\n\nclass Element extends React.Component {\n\n  render() {\n    const args = {...this.props, data: sort(graph(this.props), (a, b) => a.score - b.score)}\n    return <Chartist {...args} />;\n  }\n}\n\nexport default connect(mapStateToProps)(Element);\n","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport Links from '../Links';\nimport { Route } from 'react-router-dom';\nimport KemetImg from './img.jpg';\nimport PerPlayer from './components/config';\nimport Standings from './components/standings';\nimport TilesByPicks from './components/tilesByPicks';\nimport TilesByVP from './components/tilesByVP';\nimport TilesByPosition from './components/tilesByPosition';\nimport BestTiles from './components/bestTiles';\nimport PlayerVPByColor from './components/playerVPByColor';\nimport PlayerPicksByColor from './components/playerPicksByColor';\nimport Typography from '@material-ui/core/Typography';\nimport BestPlayer from './components/bestPlayer';\n\nconst colors = ['red', 'blue', 'white', 'black'];\n\nconst tiles = [{\n    'text': 'Best tiles',\n    'path': '/tiles/best',\n    'component': () => <BestTiles desc={\n      <div>\n        <Typography variant=\"body1\" gutterBottom>Grey bar is the average position the player that picked this tile achieved - lower is better.</Typography>\n        <Typography variant=\"body1\" gutterBottom>Red bar is the average victory points the player that picked this tile achieved - higher is better.</Typography>\n        <Typography variant=\"body1\" gutterBottom>The tiles are ordered first by the average position and then by the average VP accumulation.</Typography>\n      </div>}\n    />\n  },\n  ...colors.map(c => ({\n    'text': c + ' tiles by VP',\n    'path': '/tiles/vp/' + c + '/',\n    'component': () => <TilesByVP color={c} desc={<Typography variant=\"body1\" gutterBottom>\n      This chart measures the average victory points accumulated for {c} tiles by all players.\n    </Typography>}/>\n  })),\n  ...colors.map(c => ({\n    'text': c + ' tiles by position',\n    'path': '/tiles/position/' + c + '/',\n    'component': () => <TilesByPosition color={c} desc={<Typography variant=\"body1\" gutterBottom>\n      This chart measures the average position a player had attained when he picked a {c} tile.\n    </Typography>}/>\n  })),\n  ...colors.map(c => ({\n    'text': c + ' tiles by # of picks',\n    'path': '/tiles/picks/' + c + '/',\n    'component': () => <TilesByPicks color={c} desc={<Typography variant=\"body1\" gutterBottom>\n      This chart measures how many times {c} tiles where picked by all players.\n    </Typography>}/>\n  }))\n];\n\nconst wins = [{\n  'text': 'Standings',\n  'path': '/',\n  'component': () => <Standings desc={<Typography variant=\"body1\" gutterBottom>\n    The game can be played at most with 5 players, so there are 5 positions. The bars represent these positions, so for a certain player the first bar represents how many times he came first, the second bar how many he came second, etc.\n  </Typography>}/>\n}, {\n  'text': 'Best player',\n  'path': '/players/best',\n  'component': () => <BestPlayer desc={<Typography variant=\"body1\" gutterBottom>\n    This is the sum of all the positions that the player obtained, divided by the number of games he participated in.\n    Less is better, it means that the player got 1st place more often.\n  </Typography>}/>\n}, {\n  'text': 'Player VP by color',\n  'path': '/players/color/vp',\n  'component': () => <PlayerVPByColor desc={<Typography variant=\"body1\" gutterBottom>\n    This chart measures the ability of a player to translate a certain color to victory points. Each bar is color coded and represents the tiles of the appropriate color; it measures the average accumulated victory points for all tiles of the same color for a certain player.\n  </Typography>}/>\n}, {\n  'text': 'Player picks by color',\n  'path': '/players/color/picks',\n  'component': () => <PlayerPicksByColor desc={<Typography variant=\"body1\" gutterBottom>\n    This chart measures the favorite color of each player. \n  </Typography>}/>\n}];\n\nconst KemetLinks = () => (\n  <div>\n    <Links charts={wins} title={\"General Stats\"} key={\"Wins\"} open={true} />\n    <Divider />\n    <Links charts={tiles} title={\"Tile Stats\"} key={\"tiles\"} open={true} />\n    <Divider />\n    <PerPlayer />\n  </div>\n);\n\nconst KemetContent = () => (\n  [...wins, ...tiles].map(({path, component}) => (\n    <Route key={path} path={path} exact component={component} />\n  ))\n);\n\nexport {KemetContent, KemetLinks, KemetImg};\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport { connect } from 'react-redux';\n\nconst graph = ({games, players}) => {\n  const Init = Array(3).fill(0).map(() => players.map(() => 0));\n\n  const Reduce = (acc, {player1, player2, winner}) => {\n    let p1 = players.indexOf(player1.player);\n    let p2 = players.indexOf(player2.player);\n\n    // win , tie, lose\n\n    if (winner === 'tie') {\n      acc[1][p1]++;\n      acc[1][p2]++;\n    } else if (winner === player1.player) {\n      acc[0][p1]++;\n      acc[2][p2]++;\n    } else {\n      acc[2][p1]++;\n      acc[0][p2]++;\n    }\n\n    return acc;\n  };\n\n  return {\n    'labels': players,\n    'series': games.reduce(Reduce, Init),\n    'total': games.length,\n    'sample': games.length\n  };\n};\n\nconst mapStateToProps = state => ({\n  ...state.duelReducer,\n  draw: () => 1,\n  options: {\n    stackBars: false\n  },\n  className: \"ct-octave\"\n});\n\nclass Element extends React.Component {\n\n  render() {\n    const args = {...this.props, data: graph(this.props)}\n    return <Chartist {...args} />;\n  }\n}\n\nexport default connect(mapStateToProps)(Element);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport { connect } from 'react-redux';\nimport incrementalAverage from 'incremental-average';\n\nconst graph = ({games, players}) => {\n  const Init = Array(10).fill(0).map(() => players.map(() => incrementalAverage()));\n\n  const Reduce = (acc, {player1, player2}) => {\n    let p1 = players.indexOf(player1.player);\n    let p2 = players.indexOf(player2.player);\n\n    [{id: p1, ...player1}, {id: p2, ...player2}].forEach(({\n      id, blue, green, yellow, purple, wonder, marker, coin, battle, pantheon = 0, temple = 0\n    }) => {\n      acc[0][id].add(blue);\n      acc[1][id].add(green);\n      acc[2][id].add(yellow);\n      acc[3][id].add(purple);\n      acc[4][id].add(wonder);\n      acc[5][id].add(marker);\n      acc[6][id].add(coin);\n      acc[7][id].add(battle);\n      acc[8][id].add(pantheon);\n      acc[9][id].add(temple);\n    });\n\n    return acc;\n  };\n\n  return {\n    'labels': players,\n    'series': games.reduce(Reduce, Init).map(d => d.map(v => v.getAverage())),\n    'total': games.length,\n    'sample': games.length\n  };\n};\n\nconst mapStateToProps = state => ({\n  ...state.duelReducer,\n  draw: () => 1,\n  options: {\n    stackBars: false\n  },\n  className: \"ct-octave duel\"\n});\n\nclass Element extends React.Component {\n\n  render() {\n    const args = {...this.props, data: graph(this.props)}\n    return <Chartist {...args} />;\n  }\n}\n\nexport default connect(mapStateToProps)(Element);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport { connect } from 'react-redux';\nimport incrementalAverage from 'incremental-average';\n\nconst graph = ({games, colors}) => {\n  const Init = Array(2).fill(0).map(() => colors.map(() => incrementalAverage()));\n\n  const Reduce = (acc, {player1, player2}) => {\n    [player1, player2].forEach(player => {\n      colors.forEach((color, i) => {\n        let {won} = player;\n        acc[0][i].add(player[colors[i]] || 0);\n\n        if (won) {\n          acc[1][i].add(player[colors[i]] || 0);\n        }\n      });\n    });\n\n    return acc;\n  };\n\n  return {\n    'labels': colors,\n    'series': games.reduce(Reduce, Init).map(d => d.map(v => v.getAverage())),\n    'total': games.length,\n    'sample': games.length\n  };\n};\n\nconst mapStateToProps = state => ({\n  ...state.duelReducer,\n  draw: () => 1,\n  options: {\n    stackBars: false\n  },\n  className: \"ct-octave duel\"\n});\n\nclass Element extends React.Component {\n\n  render() {\n    const args = {...this.props, data: graph(this.props)}\n    return <Chartist {...args} />;\n  }\n}\n\nexport default connect(mapStateToProps)(Element);\n","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport Links from '../Links';\nimport { Route } from 'react-router-dom';\nimport DuelImg from './img.jpg';\nimport Standings from './components/standings';\nimport Stats from './components/stats';\nimport Average from './components/average';\nimport Typography from '@material-ui/core/Typography';\n\nconst wins = [{\n  'text': 'Standings',\n  'path': '/',\n  'component': () => <Standings desc={<Typography variant=\"body1\" gutterBottom>\n    For each player, the bars represent in order: wins, ties, loses\n  </Typography>}/>\n}, {\n  'text': 'Stats',\n  'path': '/stats',\n  'component': () => <Stats desc={<div>\n    <Typography variant=\"body1\" gutterBottom>For each player, the bars represent the average scoring points on each category.</Typography>\n    <Typography variant=\"body1\" gutterBottom>Blue: civil cards, Green: science cards, Yellow: trade cards, Purple: guilds, Grey: wonders, Black: science markers, Gold: coin, Red: battle cards.</Typography>\n  </div>} />\n}, {\n  'text': 'Average scores per color',\n  'path': '/average',\n  'component': () => <Average desc={<div>\n    <Typography variant=\"body1\" gutterBottom>For each color, the first bar presents the average points that have been scored by all players.</Typography>\n    <Typography variant=\"body1\" gutterBottom>The second bar is the average of that particular color by winners only.</Typography>\n    <Typography variant=\"body1\" gutterBottom>Blue: civil cards, Green: science cards, Yellow: trade cards, Purple: guilds, Grey: wonders, Black: science markers, Gold: coin, Red: battle cards.</Typography>\n  </div>} />\n}];\n\nconst DuelLinks = () => (\n  <div>\n    <Links charts={wins} title={\"General Stats\"} key={\"Wins\"} open={true} />\n    <Divider />\n  </div>\n);\n\nconst DuelContent = () => (\n  wins.map(({path, component}) => (\n    <Route key={path} path={path} exact component={component} />\n  ))\n);\n\nexport {DuelContent, DuelLinks, DuelImg};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { rate, Rating } from 'ts-trueskill';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport {\n  ResponsiveContainer,\n  BarChart,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Bar,\n  ReferenceLine,\n  LabelList,\n  ErrorBar\n} from 'recharts';\n\nconst graph = ({ data, players, boardgame, dataKey, range }) => {\n  const ratings = {}\n  const plays = {}\n\n  data = data.slice(range[0], range[1])\n\n  if (boardgame !== undefined) {\n    data = data.filter(d => d.play.boardgame === boardgame)\n  }\n\n  players.map(player => {\n    plays[player.name] = 0\n    ratings[player.name] = new Rating()\n    return player[player.name]\n  })\n\n  console.groupCollapsed(\"Games\")\n\n  data.map(({ play, stats }) => {\n    let game_participants = stats.map(stat => [ratings[stat.player]])\n    let rated = rate(game_participants)\n\n    console.groupCollapsed(play.boardgame)\n\n    stats.map((stat, i) => {\n      let new_rating = rated[i]\n      console.log(i, \"Updating\", stat.player, \"from\", game_participants[i].toString(), \"to\", new_rating[0].toString())\n      ratings[stat.player] = new_rating[0]\n      plays[stat.player]++\n      return plays[stats.player]\n    })\n\n    console.groupEnd()\n    return stats\n  })\n\n  console.groupEnd()\n\n  const results = players.map(player => {\n    let mu = parseFloat(ratings[player.name].mu.toFixed(3))\n    let sigma = parseFloat(ratings[player.name].sigma.toFixed(3))\n\n    return ({\n      player: player.name,\n      matches: plays[player.name],\n      mu,\n      sigma,\n      error: [sigma, sigma],\n      trueskill: (mu - (3 * sigma)).toFixed(3)\n    })\n  }).filter(d => plays[d.player] !== 0)\n\n  console.table(results)\n\n  return {\n    results,\n    dataKey,\n    'total': data.length,\n    'sample': data.length\n  };\n};\n\nconst mapStateToProps = (state, props) => ({\n  ...state.standingsReducer,\n  open: state.configReducer.open,\n  dataKey: props.dataKey\n})\n\nconst dataToMarks = data => {\n  let obj = data.map(({ play }) => {\n    let d = new Date(play.date)\n    let y = d.getFullYear()\n    return y\n  }).reduce((rs, cur, i) => {\n    if (rs[cur] === undefined) {\n      rs[cur] = i\n    }\n\n    return rs\n  }, {})\n\n  console.log(obj)\n\n  return Object.keys(obj).map(d => ({\n    value: obj[d],\n    label: d.slice(2),\n  }))\n}\n\nconst DateSlider = props => {\n  const { data, dispatch, range } = props\n\n  return (\n    <Slider\n      defaultValue={range}\n      valueLabelDisplay=\"auto\"\n      step={1}\n      marks={dataToMarks(data)}\n      min={1}\n      max={data.length}\n      onChangeCommitted={(event, value) => {\n        dispatch({\n          type: \"RANGE\",\n          limit: value\n        })\n      }}\n    />\n  )\n}\n\nconst SampleSize = props => {\n  const { sample, total } = graph(props)\n  return <Typography color=\"inherit\" noWrap {...props} >{\"Sample size: \" + sample + \" / \" + total}</Typography>\n}\n\nclass Element extends React.Component {\n  componentDidMount() {\n    const { dispatch } = this.props\n\n    dispatch({\n      type: \"SET_MSG\",\n      element: () => SampleSize(this.props)\n    })\n  }\n\n  render() {\n    const { dataKey, results } = graph(this.props)\n\n    const sorted = results.sort((a, b) => {\n      return b[dataKey] - a[dataKey]\n    })\n\n    let content = (\n      <Typography gutterBottom>\n        There are no data for the current index you have selected.\n      </Typography>\n    )\n\n    if (sorted.length > 0) {\n      let min = parseFloat(sorted[sorted.length-1][dataKey])\n      //let max = parseFloat(sorted[0][dataKey])\n      let max = 36\n\n      content = (\n        <ResponsiveContainer width=\"95%\" height={window.innerHeight - 150} >\n          <BarChart data={sorted} layout=\"vertical\" margin={{ top: 0, right: 0, left: 15, bottom: 0 }}>\n            <XAxis type=\"number\" domain={[dataMin => Math.floor(min < 0 ? -5 : 0), dataMax => Math.ceil(max)]} orientation=\"top\" />\n            <YAxis type=\"category\" dataKey=\"player\" stroke=\"black\" />\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <Tooltip />\n            <ReferenceLine x={sorted[0][dataKey]} stroke=\"red\" strokeDasharray=\"3 3\" />\n            <Bar dataKey={dataKey} fill=\"#64b5f6\">\n              <LabelList dataKey={dataKey} position=\"insideLeft\" />\n              {dataKey===\"mu\" ? <ErrorBar dataKey=\"error\" width={4} strokeWidth={2} /> : <div></div>}\n            </Bar>\n          </BarChart>\n        </ResponsiveContainer>\n      )\n    }\n\n    return (\n      <div>\n        {content}\n        <DateSlider {...this.props} />\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps)(Element);\n\n// return (\n//   <div style={{position: 'relative', width: '100%', paddingBottom: '1000px'}}>\n//     <div\n//       style={{\n//         position: 'absolute',\n//         left: 0,\n//         right: 0,\n//         bottom: 0,\n//         top: 0,\n//       }}\n//     >\n//         <ResponsiveContainer height=\"95%\">\n//           <BarChart data={results} layout=\"vertical\" margin={{ top: 0, right: 0, left: 15, bottom: 0 }}>\n//             <XAxis type=\"number\" orientation=\"top\" />\n//             <YAxis type=\"category\" dataKey=\"player\" stroke=\"black\" />\n//             <CartesianGrid strokeDasharray=\"3 3\" />\n//             <Tooltip />\n//             <ReferenceLine x={results[0].mu} stroke=\"red\" strokeDasharray=\"3 3\" />\n//             <Bar dataKey={dataKey} fill=\"#64b5f6\">\n//               <LabelList dataKey={dataKey} position=\"insideLeft\" />\n//               {dataKey===\"mu\" ? <ErrorBar dataKey=\"error\" width={4} strokeWidth={2} /> : <div></div>}\n//             </Bar>\n//           </BarChart>\n//         </ResponsiveContainer>\n//   </div></div>\n\n//       )\n","export const dateSort = (a, b) => {\n  let diff = new Date(b.play.date) - new Date(a.play.date)\n  if (diff === 0) {\n    return b.play.id - a.play.id\n  } else {\n    return diff\n  }\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\nimport { IconContext } from \"react-icons\";\nimport { Avatar, Chip, Divider } from '@material-ui/core';\nimport { dateSort } from './common';\nimport {\n  GiSwapBag,\n  GiLibertyWing,\n  GiAncientRuins,\n  GiScythe,\n  GiVikingHelmet,\n  GiCastle,\n  GiJuggler,\n  GiBlood,\n  GiPlantsAndAnimals,\n  GiTreeRoots,\n  GiDuel,\n  GiAzulFlake,\n  GiVampireDracula,\n  GiRolledCloth,\n  GiElvenCastle,\n  GiRiver,\n  GiChessRook,\n  GiEgyptianWalk\n} from 'react-icons/gi';\nimport {\n  FaChessBoard,\n  FaVenus,\n  FaWineGlass,\n  FaHatCowboy,\n  FaChessKing,\n  FaChessKnight,\n  FaChessBishop,\n} from 'react-icons/fa';\nimport { WiTrain } from 'react-icons/wi';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: '6px 16px',\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  table: {\n    maxWidth: 650,\n  },\n  chips: {\n    margin: theme.spacing(1, 0, 1, 0),\n  },\n  date: {\n    margin: theme.spacing(1.5, 0, 1.5, 0),\n  }\n}));\n\nconst getBoardgameIcon = boardgame => {\n  switch(boardgame.play.boardgame) {\n    case \"Great Western Trail\":\n      return <FaHatCowboy />\n    case \"Azul\":\n      return <GiAzulFlake />\n    case \"7 Wonders Duel\":\n      return <GiDuel />\n    case \"Hero Realms\":\n      return <GiVampireDracula />\n    case \"Root\":\n      return <GiTreeRoots />\n    case \"Ticket to ride: Europe\":\n      return <WiTrain />\n    case \"Architects of the west kingdom\":\n      return <FaChessBishop />\n    case \"Paladins of the West Kingdom\":\n      return <FaChessKnight />\n    case \"Viscounts of the West Kingdom\":\n      return <FaChessKing />\n    case \"Everdell\":\n      return <GiPlantsAndAnimals />\n    case \"Viticulture essential edition\":\n      return <FaWineGlass />\n    case \"Blood rage\":\n      return <GiBlood />\n    case \"Orléans\":\n      return <GiSwapBag />\n    case \"Wingspan\":\n      return <GiLibertyWing />\n    case \"Lost ruins of Arnak\":\n      return <GiAncientRuins />\n    case \"Scythe\":\n      return <GiScythe />\n    case \"Raiders of the north sea\":\n      return <GiVikingHelmet />\n    case \"Castles of Burgundy\":\n      return <GiCastle />\n    case \"Concordia Venus\":\n      return <FaVenus />\n    case \"The Magnificent\":\n      return <GiJuggler />\n    case \"Lords of Waterdeep\":\n      return <GiChessRook />\n    case \"Patchwork\":\n      return <GiRolledCloth />\n    case \"Carcassonne\":\n      return <GiElvenCastle />\n    case \"Tigris & Euphrates\":\n      return <GiRiver />\n    case \"Kemet\":\n      return <GiEgyptianWalk />\n    default:\n      return <FaChessBoard />\n  }\n}\n\nconst generateStanding = (stats, winner) => (\n  <Chip key={stats.id} avatar={<Avatar>{stats.data.score}</Avatar>} label={stats.player} color={winner ? \"primary\" : \"default\"} />\n)\n\nconst generateTimelineItem = classes => boardgame => (\n  <TimelineItem key={boardgame.play.id}>\n    <TimelineOppositeContent>\n      <Typography variant=\"body2\" color=\"textSecondary\" className={classes.date}>\n        {new Date(boardgame.play.date).toLocaleDateString('el-GR', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })}\n      </Typography>\n    </TimelineOppositeContent>\n    <TimelineSeparator>\n      <TimelineDot color=\"primary\">\n        <IconContext.Provider value={{ size: \"2em\" }}>\n          {getBoardgameIcon(boardgame)}\n        </IconContext.Provider>\n      </TimelineDot>\n      <TimelineConnector />\n    </TimelineSeparator>\n    <TimelineContent>\n      <Paper elevation={3} className={classes.paper}>\n        <Typography variant=\"h6\" component=\"h1\">\n          {boardgame.play.boardgame}\n        </Typography>\n        <Divider />\n        <div className={classes.chips}>\n          {boardgame.stats.map((stat, i) => generateStanding(stat, i === 0))}\n        </div>\n      </Paper>\n    </TimelineContent>\n  </TimelineItem>\n)\n\nconst Element = (props) => {\n  const classes = useStyles();\n  const { data } = props;\n  let f = generateTimelineItem(classes)\n  let rs = data.slice().sort(dateSort).map(d => f(d))\n\n  return (\n    <Timeline align=\"alternate\">{rs}</Timeline>\n  );\n}\n\nconst mapStateToProps = state => ({\n  ...state.standingsReducer,\n  open: state.configReducer.open\n})\n\nexport default connect(mapStateToProps)(Element);\n","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport Links from '../Links';\nimport { Route } from 'react-router-dom';\nimport StandingsImg from './img.jpg';\nimport Standings from './standings';\nimport Typography from '@material-ui/core/Typography';\nimport Timeline from './timeline';\n\n\n// +--------+--------------------------------+\n// |     42 | Tigris & Euphrates             |\n// |    822 | Carcassonne                    |\n// |  14996 | Ticket to ride: Europe         |\n// | 110327 | Lords of Waterdeep             |\n// | 127023 | Kemet                          |\n// | 163412 | Patchwork                      |\n// | 170042 | Raiders of the north sea       |\n// | 170216 | Blood rage                     |\n// | 173346 | 7 Wonders Duel                 |\n// | 183394 | Viticulture essential edition  |\n// | 230802 | Azul                           |\n// | 236457 | Architects of the west kingdom |\n// | 237182 | Root                           |\n// | 256916 | Concordia Venus                |\n// | 266192 | Wingspan                       |\n// | 266810 | Paladins of the West Kingdom   |\n// | 271320 | Castles of Burgundy            |\n// | 283863 | The Magnificent                |\n// | 312484 | Lost ruins of Arnak            |\n// +--------+--------------------------------+\n\nconst boardgames = [\n  \"Tigris & Euphrates\",\n  \"Ticket to ride: Europe\",\n  \"Carcassonne\",\n  \"Lords of Waterdeep\",\n  \"Kemet\",\n  \"Patchwork\",\n  \"Raiders of the north sea\",\n  \"Blood rage\",\n  \"7 Wonders Duel\",\n  \"Viticulture essential edition\",\n  \"Azul\",\n  \"Architects of the west kingdom\",\n  \"Root\",\n  \"Concordia Venus\",\n  \"Wingspan\",\n  \"Paladins of the West Kingdom\",\n  \"Castles of Burgundy\",\n  \"The Magnificent\",\n  \"Lost ruins of Arnak\",\n  \"Everdell\",\n  \"Scythe\",\n  \"Great Western Trail\",\n  \"Orléans\"\n]\n\nconst wins = [{\n  'text': 'Standings',\n  'path': '/',\n  'component': () => <Standings dataKey=\"trueskill\" desc={<Typography variant=\"body1\" gutterBottom>\n    For each player, the first column represents μ (mu) and the second σ (sigma), based on the <a href=\"https://en.wikipedia.org/wiki/TrueSkill\">TrueSkill</a> algorithm. <br />\n    A player's skill is represented as a normal distribution N characterized by a mean value μ (mu, representing perceived skill) and a variance σ (sigma, representing how \"unconfident\" test system is in the player's μ value).\n  </Typography>}/>\n},{\n  'text': 'Mu',\n  'path': '/mu',\n  'component': () => <Standings dataKey=\"mu\" />\n},{\n  'text': 'Timeline',\n  'path': '/timeline',\n  'component': () => <Timeline />\n},\n...boardgames.map((d, i) => ({\n  'text': d,\n  'path': '/' + i,\n  'component': () => <Standings boardgame={d} dataKey=\"trueskill\" />\n}))\n];\n\nconst StandingsLinks = () => (\n  <div>\n    <Links charts={wins} title={\"Standings\"} key={\"Wins\"} open={true} />\n    <Divider />\n  </div>\n);\n\nconst StandingsContent = () => (\n  wins.map(({path, component}) => (\n    <Route key={path} path={path} exact component={component} />\n  ))\n);\n\nexport {StandingsContent, StandingsLinks, StandingsImg};\n","const tally = ({\n  blue,\n  green,\n  yellow,\n  purple,\n  wonder,\n  marker,\n  coin,\n  battle,\n  temple = 0,\n  pantheon = 0\n}) => blue + green + yellow + purple + wonder + marker + coin + battle + temple + pantheon;\n\nconst result = ({\n  player1: {\n    battle_victory: bv1,\n    science_victory: sv1,\n    ...rest1\n  },\n  player2: {\n    battle_victory: bv2,\n    science_victory: sv2,\n    ...rest2\n  }\n}) => {\n  let score1 = tally(rest1);\n  let score2 = tally(rest2);\n\n  if (bv1 || sv1) {\n    return rest1.player;\n  }\n\n  if (bv2 || sv2) {\n    return rest2.player;\n  }\n\n  if (score1 === score2) {\n    return \"tie\";\n  } else if (score1 > score2) {\n    return rest1.player;\n  } else {\n    return rest2.player;\n  }\n}\n\nexport {\n  result,\n  tally\n};\n","import data from '../../duel/plays.json';\nimport {result, tally} from './score';\nimport {\n  unique,\n  flatten,\n  collection\n} from '../../common';\n\nconst addScoreToData = game => {\n  const {player1, player2} = game;\n  const total1 = tally(player1);\n  const total2 = tally(player2);\n  const winner = result(game);\n\n  return {\n    ...game,\n    winner,\n    player1: {\n      ...player1,\n      won: player1.player === winner,\n      total: total1\n    },\n    player2: {\n      ...player2,\n      won: player2.player === winner,\n      total: total2\n    }\n  }\n};\n\nexport default {\n  players: unique(flatten(collection(data)(d => [d.player2.player, d.player1.player]))),\n  games: data.map(addScoreToData),\n  colors: ['blue', 'green', 'yellow', 'purple', 'wonder', 'marker', 'coin', 'battle', 'temple', 'pantheon']\n};\n","import data from '../standings/plays.json';\n\nconst getPositions = data => Math.max(...data.map(d => d.stats.length))\n\nconst getPlayers = data => {\n  let rs = []\n\n  data.map(play => play.stats).flat().map(p => {\n    rs[p.player_id] = {\n      \"name\": p.player,\n      \"id\": p.player_id,\n      \"plays\": 0\n    }\n\n    return rs[p.player_id]\n  })\n\n  return rs\n}\n\nexport const reducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"INIT\":\n      return {\n        ...state,\n        positions: getPositions(data),\n        players: getPlayers(data),\n        data,\n        range: [0, data.length]\n      }\n    case \"RANGE\":\n      return {\n        ...state,\n        range: [...action.limit]\n      }\n    default:\n      return state\n  }\n};\n","import React from 'react';\n\nexport const TOGGLE_DRAWER = 'TOGGLE_DRAWER';\nexport const CLOSE_DRAWER = 'CLOSE_DRAWER';\nexport const SET_MSG = 'SET_MSG';\n\nconst init = {\n  open: false,\n  element: props => (<div></div>)\n}\n\nexport const reducer = (state = init, action) => {\n  console.log(state)\n  switch (action.type) {\n    case TOGGLE_DRAWER:\n      return {\n        ...state,\n        open: !state.open\n      }\n    case CLOSE_DRAWER:\n      return {\n        ...state,\n        open: false\n      }\n    case SET_MSG:\n      return {\n        ...state,\n        element: action.element\n      }\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './Game';\nimport Grid from '@material-ui/core/Grid';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { ScytheLinks, ScytheContent, ScytheImg } from './scythe/Charts';\nimport { KemetLinks, KemetContent, KemetImg } from './kemet';\nimport { DuelLinks, DuelContent, DuelImg } from './duel';\nimport { StandingsLinks, StandingsContent, StandingsImg } from './standings';\nimport { combineReducers, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { reducer as kemetReducer } from './reducers/kemet';\nimport { reducer as duelReducer } from './reducers/duel';\nimport { reducer as standingsReducer } from './reducers/standings';\nimport { reducer as configReducer } from './reducers/config';\n\nconst store = createStore(combineReducers({\n  kemetReducer,\n  duelReducer,\n  standingsReducer,\n  configReducer,\n}));\n\nstore.dispatch({\n  type: \"INIT\"\n});\n\nconst Scythe = () => <Game basename=\"stats/scythe\" links={<ScytheLinks />} content={<ScytheContent />} />;\nconst Kemet = () => <Game basename=\"stats/kemet\" links={<KemetLinks />} content={<KemetContent />} />;\nconst Duel = () => <Game basename=\"stats/duel\" links={<DuelLinks />} content={<DuelContent />} />;\nconst Standings = () => <Game basename=\"stats/standings\" links={<StandingsLinks />} content={<StandingsContent />} open={false} />;\n\nconst style = {\n  width: '100%',\n  height: 'auto'\n}\n\nconst Index = () => (\n  <Grid\n    container\n    direction=\"row\"\n    justify=\"center\"\n    alignItems=\"center\"\n    >\n    <Grid item xs={6}>\n      <Link to=\"/stats/scythe\">\n        <img src={ScytheImg} alt=\"scythe\" style={style} />\n      </Link>\n    </Grid>\n    <Grid item xs={6}>\n      <Link to=\"/stats/kemet\">\n        <img src={KemetImg} alt=\"kemet\" style={style} />\n      </Link>\n    </Grid>\n    <Grid item xs={6}>\n      <Link to=\"/stats/duel\">\n        <img src={DuelImg} alt=\"duel\" style={style} />\n      </Link>\n    </Grid>\n    <Grid item xs={6}>\n      <Link to=\"/stats/standings\">\n        <img src={StandingsImg} alt=\"duel\" style={style} />\n      </Link>\n    </Grid>\n  </Grid>\n);\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <Route path=\"/stats/\" exact component={Index} />\n      <Route path=\"/stats/scythe\" component={Scythe} />\n      <Route path=\"/stats/kemet\" component={Kemet} />\n      <Route path=\"/stats/duel\" component={Duel} />\n      <Route path=\"/stats/standings\" component={Standings} />\n    </Provider>\n  </Router>\n, document.getElementById('root'));\n","import initialState from './duel/init';\n\nexport const reducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"INIT\":\n      return initialState;\n    default:\n      return state;\n  }\n};\n"],"sourceRoot":""}